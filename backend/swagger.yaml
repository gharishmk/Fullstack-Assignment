openapi: 3.0.0
info:
  title: School Vaccination Portal API
  version: 1.0.0
  description: API documentation for the School Vaccination Portal

servers:
  - url: http://localhost:5000/api
    description: Development server

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        email:
          type: string
          format: email
        role:
          type: string
          enum: [admin]

    Student:
      type: object
      properties:
        studentId:
          type: string
        firstName:
          type: string
        lastName:
          type: string
        dateOfBirth:
          type: string
          format: date
        grade:
          type: string
        class:
          type: string
        gender:
          type: string
          enum: [male, female, other]
        parentName:
          type: string
        contactNumber:
          type: string
        address:
          type: string
        vaccinationStatus:
          type: array
          items:
            type: object
            properties:
              vaccineName:
                type: string
              date:
                type: string
                format: date-time
              doseNumber:
                type: integer
              driveId:
                type: string

    VaccinationDrive:
      type: object
      properties:
        vaccineName:
          type: string
        date:
          type: string
          format: date-time
        availableDoses:
          type: integer
          minimum: 1
        applicableGrades:
          type: array
          items:
            type: string
        applicableClasses:
          type: array
          items:
            type: string
        status:
          type: string
          enum: [scheduled, completed, cancelled]
        vaccinatedCount:
          type: integer
          minimum: 0
        notes:
          type: string

paths:
  /auth/login:
    post:
      tags:
        - Authentication
      summary: Login to the system
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /auth/register:
    post:
      tags:
        - Authentication
      summary: Register a new admin user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
      responses:
        '201':
          description: Registration successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                  user:
                    $ref: '#/components/schemas/User'

  /students:
    get:
      tags:
        - Students
      summary: Get all students
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: search
          schema:
            type: string
        - in: query
          name: grade
          schema:
            type: string
        - in: query
          name: class
          schema:
            type: string
        - in: query
          name: vaccinationStatus
          schema:
            type: string
            enum: [vaccinated, unvaccinated]
      responses:
        '200':
          description: List of students
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Student'

    post:
      tags:
        - Students
      summary: Create a new student
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '201':
          description: Student created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

  /students/{id}:
    get:
      tags:
        - Students
      summary: Get a student by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Student details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

    put:
      tags:
        - Students
      summary: Update a student
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Student'
      responses:
        '200':
          description: Student updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Student'

    delete:
      tags:
        - Students
      summary: Delete a student
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Student deleted successfully

  /students/bulk-import:
    post:
      tags:
        - Students
      summary: Import students from CSV
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '200':
          description: Students imported successfully

  /drives:
    get:
      tags:
        - Vaccination Drives
      summary: Get all vaccination drives
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: status
          schema:
            type: string
            enum: [scheduled, completed, cancelled]
        - in: query
          name: upcoming
          schema:
            type: boolean
      responses:
        '200':
          description: List of vaccination drives
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VaccinationDrive'

    post:
      tags:
        - Vaccination Drives
      summary: Create a new vaccination drive
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccinationDrive'
      responses:
        '201':
          description: Vaccination drive created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccinationDrive'

  /drives/{id}:
    get:
      tags:
        - Vaccination Drives
      summary: Get a vaccination drive by ID
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vaccination drive details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccinationDrive'

    put:
      tags:
        - Vaccination Drives
      summary: Update a vaccination drive
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VaccinationDrive'
      responses:
        '200':
          description: Vaccination drive updated successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VaccinationDrive'

    delete:
      tags:
        - Vaccination Drives
      summary: Delete a vaccination drive
      security:
        - bearerAuth: []
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Vaccination drive deleted successfully

  /drives/stats:
    get:
      tags:
        - Vaccination Drives
      summary: Get vaccination drive statistics
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Vaccination drive statistics
          content:
            application/json:
              schema:
                type: object
                properties:
                  stats:
                    type: array
                    items:
                      type: object
                      properties:
                        _id:
                          type: string
                        count:
                          type: integer
                        totalDoses:
                          type: integer
                        totalVaccinated:
                          type: integer
                  upcomingDrives:
                    type: integer 